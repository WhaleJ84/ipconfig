#!/usr/bin/env sh

# Ensure the user is running with superuser privileges
[ $(id -u) != 0 ] && echo 'This script must be run with superuser privileges.' && exit 0

IPCIDR="([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}/[[:digit:]]{1,2}"
# TODO: Ensure /etc/netplan is the correct dir for configs
configfile=$(ls /etc/netplan/01-*.yaml)
# Ensure there is a backup. Requires sudo privileges
[ ! -e $configfile.bak ] && cp $configfile $configfile.bak
hostname=$(cat /etc/hostname)

getconnectedinterfaces(){
    interfaces=$(ls /sys/class/net)
}

selectinterface(){
    [ -z $interfaces ] && getconnectedinterfaces
    echo 'AVAILABLE INTERFACES:'
    echo "$interfaces"
    read -p 'What interface do you want to configure? ' interface
    [ $(echo $interface | grep -e "$interfaces") ] || selectinterface
}

getinterfaceinformation(){
    [ -z $interface ] && selectinterface
    dhcp4=$(grep dhcp4 $configfile | awk '{print $2}')
    [ ! $dhcp4 ] && dhcp4='no'
    ipv4=$(ip address show dev $interface | grep -e 'inet ' | sed -E 's|[^[:digit:]]*(([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}/[[:digit:]]{1,2}).*|\1|')
    gateway4=$(ip route show dev $interface | grep -e 'default via' | sed -E 's/[^[:digit:]]*(([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}).*/\1/')
    nameserver=$(grep -e 'nameserver' /etc/resolv.conf | cut -f2 -d' ')
    domainname=$(egrep -e "^([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}[^[:alpha:]]*$hostname\.?([[:alpha:]])?" /etc/hosts | cut -f5 -d. | awk '{print $2}')
    [ ! $domainname ] && domainname='not set'
}

printinterfaceinformation(){
    [ -z $dhcp4 $ipv4 $gateway4 $nameserver $domainname ] && getinterfaceinformation
    echo "DHCP: $dhcp4"
    echo "IP: $ipv4"
    echo "gateway: $gateway4"
    echo "nameservers: $nameserver"
    echo "domain: $domainname"
}

getconfigvalue(){
    [ $2 ]  && file=$2 || file=$configfile.edit
    egrep -e "^[[:blank:]]*$1:" $file
}

prepareconfigfile(){
    [ -z $interface ] && selectinterface
    cp $configfile $configfile.edit
    #header=$(egrep -e '^#' $configfile)
    printf "$header\nnetwork:\n    version:$(getconfigvalue version | cut -f2 -d:)\n    renderer:$(getconfigvalue renderer | cut -f2 -d:)\n    ethernets:\n         $interface:\n            dhcp4:$(getconfigvalue dhcp4 | cut -f2 -d:)\n            addresses:$(getconfigvalue addresses | head -1 | cut -f2 -d:)\n            gateway4:$(getconfigvalue gateway | cut -f2 -d:)\n            nameservers:\n                addresses:$(getconfigvalue addresses | tail -1 | cut -f2 -d:)\n" > $configfile.edit
}

changeconfigfile(){
    [ ! -f "$configfile.edit" ] && prepareconfigfile
    if [ $1 = "renderer" ]; then
        read -p 'Manage interfaces with either: 1) networkd or 2) NetworkManager [1,2] ' renderer
        [ "$renderer" = '2' -o "$renderer" = 'NetworkManager' ] && renderer='NetworkManager' || renderer='networkd'
        sed -Ei "/$(getconfigvalue renderer)/s/:(.*)?$/: $renderer/" $configfile.edit
    elif [ $1 = "dhcp4" ]; then
        [ $(getconfigvalue dhcp4 | awk '{print $2}') ] || sed -Ei "/$(getconfigvalue dhcp4)/s/:$/: false/" $configfile.edit
        read -p 'Manage interface via DHCP? [y/N] ' option
        [ "$option" = "y" ] && sed -Ei "/$(getconfigvalue dhcp4)/s/:(.*)?$/: true/" $configfile.edit || sed -Ei "/$(getconfigvalue dhcp4)/s/:(.*)?$/: false/" $configfile.edit
    elif [ $1 = "ipv4" ]; then
        read -p 'Please enter a valid IPv4 address for address: ' ipv4
        read -p 'Please enter a valid CIDR address for subnet: ' cidr
        [ $(echo "$ipv4/$cidr" | egrep -e '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}/[[:digit:]]{1,2}') ] || changeconfigfile ipv4
        sed -Ei "1,/addresses/s/(addresses:)(.*)?$/\1 \[$ipv4\/$cidr\]/" $configfile.edit
    elif [ $1 = "gateway4" ]; then
        read -p 'Please enter a valid IPv4 address for gateway: ' gateway4
        [ $(echo "$gateway4" | egrep -e '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}') ] || changeconfigfile gateway4
        sed -Ei "/$(getconfigvalue gateway)/s/:(.*)?$/: $gateway4/" $configfile.edit
    elif [ $1 = "nameserver4" ]; then
        read -p 'Please enter a valid IPv4 address for nameserver. You can enter two entries by separating entries with a comma (e.g. ?.?.?.?,?.?.?.?) ' nameserver4
        [ $(echo "$nameserver4" | egrep -e '(([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3},?){1,2}') ] || changeconfigfile nameserver4
        sed -Ei "$ s|(addresses:)(.*)?$|\1 [$nameserver4]|" $configfile.edit
    else
        exit 0
    fi
}

verifyconfig(){
    cp $configfile.edit $configfile
    netplan apply
}

prepareconfigfile
changeconfigfile renderer
changeconfigfile dhcp4
changeconfigfile ipv4
changeconfigfile gateway4
changeconfigfile nameserver4
cat $configfile.edit
verifyconfig
